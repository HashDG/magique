you need java >= jdk 1.* 
you need the magique.jar (see http://www.lifl.fr/MAGIQUE)
you need a TCP/IP communication support for RMI

you may want to use the magiqueGui.jar (see http://www.lifl.fr/MAGIQUE)

Distributed Game :
******************

the PB :
--------

The Rock Paper Scissor (rps) game is probably well-known: it's a two
players game. The players play silmutaneously and have three possible
plays: Rock, Paper or Scissor. The result of each play is: 
* the 2 players play the same, no point
* Rock against Paper : Paper wins (and gains 1 point)
* Rock against Scissor : Rock wins (and gains 1 point)
* Scissor against Paper : Scissor wins (and gains 1 point)

The goal of this problem is to play to RCP with a multi agent system:
one agent is the "bank" (the referee) and 2 others are the players. One
player is a human player.


RUN THE EXAMPLE :
*****************


Do not forget to change hostname in the VisualisateurImp.java (in
...connectToBoss("...@HOSTNAME")), this must be set to the name
of the machine where the SuperImp is run. (nothing to change in local version)

Each agent is supposed to be launched on different machine, then one
platform by machine. The default magique-rmi port (4444) is supposed
to be used therefore no other platform (with that port) must be used
at the same time... To have a different port, give this number as
parameter to Platform constructor (warning : then you may have to
change the connectToBoss...)

compile with javac *.java

* distributed version : 
***********************

launch Super agent in a console on the chosen host :
   java  fr.lifl.magique.Start Super

launch the bank agent :
   java  fr.lifl.magique.Start BankImp [port]

launch the player agents:

   java  fr.lifl.magique.Start HumanPlayerImp  [port]
   java  fr.lifl.magique.Start randomplayerImp [port]
						    

launch the Go "agent" to start the execution
     java  fr.lifl.magique.Start Go [port]

then play!


LOCAL :
*******
You can test the demo on a single host using the TestImp file :
run :
    java fr.lifl.magique.Start TestImp


GUI :
*****
to use the interface to run the example, start the interface and do
not forget to add the directory where the rps files are located to the
classpath :

* in a shell window :
java -cp %CLASSPATH%;RPS_DIR_PATH fr.lifl.magique.gui.LanceurAgents 
(dos/windows)

java -cp $CLASSPATH$;RPS_DIR_PATH fr.lifl.magique.gui.LanceurAgents 
(unix/linux)
 
* in File menu chose :load, and in the RPS_DIR_PATH open the rps.magic
file. (the hierarchical "SMA" appears)

* in View menu chose to see "Execution frame", in execution chose to
Show "Console Tools"

* in "Computers" subwindow, edit the computers you want to use to run
the agents (it will be convenient to File-Save the config).
On these computers you must run the "magique daemon" (not a daemon in
the unix sense), this is done with the command : java -jar magique.jar
[portnumber] on these computer. The port used (default is 4444) must
be set in the "Computers" window (right-click on the computer name).

You do not need to put the class files of the Collatz package on the
remote computers, the needed bytecoe will be automatically transferred
when needed.



* for each agent chose the computer : select the agent, then click on
the chosen computer

* click on the execute button : 3 windows (one by agent) appears in
the execution frame (but in this case they will have no use)

* in the Console tools : enter :  " agent.perform(bank,"start");  "
(this asks the bank agent to execute the "start" method/skill)

If one of the implied agent has the "HumanPlayerSkill" (this is the
case in the proposed configuration), you have to enter a choice in the
console window of the "daemon" (PlatformLauncher) so have a look on it)

* everything appears now in the shell window : play !

